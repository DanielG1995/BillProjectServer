{"version":3,"file":"static/js/370.1c02b18b.chunk.js","mappings":"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","sources":["Pages/MainPages/DatosGenerales.js"],"sourcesContent":["import { useCallback, useState } from 'react';\r\n// eslint-disable-next-line no-unused-vars\r\nimport Chart from 'chart.js/auto';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { getDatosGenerales } from '../../actions/facturas';\r\nimport { useSelector } from 'react-redux';\r\nimport { colorsChart } from '../../utils/colors';\r\n\r\nconst DatosGenerales = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { datosGenerales, facturas, loading } = useSelector(state => state.factura);\r\n    const { isLoading } = useSelector(state => state.ui);\r\n    const [dataSet, setDataSet] = useState({ years: [], labels: [] });\r\n    const plugin = {\r\n        id: 'custom_canvas_background_color',\r\n        beforeDraw: (chart) => {\r\n            const ctx = chart.canvas.getContext('2d');\r\n            ctx.save();\r\n            ctx.globalCompositeOperation = 'destination-over';\r\n            ctx.fillStyle = '#212529';\r\n            ctx.fillRect(0, 0, chart.width, chart.height);\r\n            ctx.restore();\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (facturas.length > 0) {\r\n            dispatch(getDatosGenerales())\r\n        }\r\n    }, [dispatch, facturas])\r\n\r\n    const dataParse = useCallback(\r\n        () => {\r\n            if (datosGenerales?.yearMonth) {\r\n                let arrDataSet = { labels: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'], years: [] }\r\n                datosGenerales?.yearMonth.forEach(element => {\r\n                    if (!arrDataSet.years.includes(element.year)) { arrDataSet.years.push(element.year) }\r\n                    if (arrDataSet[`${element.year}`]) {\r\n                        arrDataSet[`${element.year}`].push({ x: arrDataSet?.labels?.[element.month - 1], y: element.totalPrice, order: element.month })\r\n                    } else {\r\n                        arrDataSet[`${element.year}`] = [{ x: arrDataSet?.labels?.[element.month - 1], y: element.totalPrice, order: element.month }]\r\n                    }\r\n                    arrDataSet[`${element.year}`].sort((a, b) => a.order - b.order)\r\n\r\n                });\r\n                setDataSet(arrDataSet)\r\n            }\r\n        },\r\n        [datosGenerales],\r\n    )\r\n\r\n    useEffect(() => {\r\n        dataParse();\r\n    }, [dataParse])\r\n\r\n\r\n    const actualizarData=()=>{\r\n        localStorage.removeItem('datosGenerales')\r\n        dispatch(getDatosGenerales())\r\n    }\r\n    return (\r\n        <div className='container mt-5 text-white'>\r\n\r\n            <h1 className='animate__animated animate__bounce animate__fadeInLeft animate__fast'>Datos Generales</h1>\r\n            <button onClick={actualizarData}>Actualizar</button>\r\n            <hr></hr>\r\n            <div className='d-flex flex-wrap justify-content-center animate__animated animate__bounce animate__fadeInLeft animate__fast'>\r\n                <div className='col d-flex flex-column justify-content-center card-dashboard bg-gradient1 mx-2 mb-5 p-3'>\r\n                    <p className='col-12 text-start h2'>{datosGenerales?.total ? datosGenerales.total : '0'}</p>\r\n\r\n                    <p className='col-12 text-start'>Facturas cargadas</p>\r\n                </div>\r\n                <div className='col d-flex flex-column justify-content-center card-dashboard bg-gradient2 mx-2 mb-5 p-3'>\r\n                    <p className='col-12 text-start h3'>{datosGenerales?.producto?.descripcion || 'No existen productos registrados'} ({datosGenerales?.producto?.total})</p>\r\n                    <p className='col-12 text-start'>Producto más comprado</p>\r\n                </div>\r\n                <div className='col d-flex flex-column justify-content-center card-dashboard bg-gradient3 mx-2 mb-5 p-3'>\r\n                    <p className='col-12 text-start h3'>{datosGenerales?.establecimiento?.razonSocial || 'No existen establecimientos registrados'}</p>\r\n                    <p className='col-12 text-start'>Establecimiento más visitado</p>\r\n                </div>\r\n                <div className='col d-flex flex-column justify-content-center card-dashboard bg-gradient4 mx-5 mb-5 p-3'>\r\n                    <p className='col-12 text-start h3'>$ {Math.round(datosGenerales?.totalGastado?.gastoTotal) || '0.00'}</p>\r\n                    <p className='col-12 text-start'>Total gastado</p>\r\n                </div>\r\n                <div className='col-12 d-flex justify-content-center'>\r\n                    {loading || isLoading ? <div className=\"ml-5 sk-chase\">\r\n                        <div className=\"sk-chase-dot\"></div>\r\n                        <div className=\"sk-chase-dot\"></div>\r\n                        <div className=\"sk-chase-dot\"></div>\r\n                        <div className=\"sk-chase-dot\"></div>\r\n                        <div className=\"sk-chase-dot\"></div>\r\n                        <div className=\"sk-chase-dot\"></div>\r\n                    </div> : <div className=' col-8 card-dashboard bg-dark'>\r\n                        <h3 className='text-dark text-center text-white bg-dark'>Gasto por años</h3>\r\n                        <Line\r\n                            datasetIdKey='id'\r\n                            options={{\r\n                                animations: {\r\n                                    tension: {\r\n                                        duration: 1000,\r\n                                        easing: 'ease',\r\n                                        from: 0.2,\r\n                                        to: 0.4,\r\n                                        loop: false\r\n                                    }\r\n                                },\r\n                                scales: {\r\n                                    grid: {\r\n                                        color: 'white'\r\n                                    },\r\n                                    x: {\r\n                                        grid: {\r\n                                            color: '#494949e9',\r\n                                            borderWidth: 1\r\n                                        }\r\n                                    },\r\n                                    y: {\r\n                                        grid: {\r\n                                            color: '#494949e9',\r\n                                            borderWidth: 1\r\n                                        }\r\n                                    }\r\n                                },\r\n                                layout: {\r\n                                    padding: 40\r\n                                },\r\n\r\n                            }}\r\n                            data={{\r\n                                labels: dataSet?.labels,\r\n                                datasets: dataSet?.years?.map((label, i) => {\r\n                                    return {\r\n                                        label: `${label}`,\r\n                                        data: dataSet?.[`${label}`],\r\n                                        backgroundColor: [\r\n                                            colorsChart[i]\r\n                                        ],\r\n                                        borderColor: [\r\n                                            colorsChart[i]\r\n                                        ],\r\n                                        borderWidth: 1\r\n                                    }\r\n                                }),\r\n                            }}\r\n                            plugins={[plugin]}\r\n                        />\r\n                    </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DatosGenerales\r\n"],"names":["dispatch","useDispatch","useSelector","state","factura","datosGenerales","facturas","loading","isLoading","ui","useState","years","labels","dataSet","setDataSet","useEffect","length","getDatosGenerales","dataParse","useCallback","yearMonth","arrDataSet","forEach","element","includes","year","push","x","month","y","totalPrice","order","sort","a","b","className","onClick","localStorage","removeItem","total","producto","descripcion","establecimiento","razonSocial","Math","round","totalGastado","gastoTotal","datasetIdKey","options","animations","tension","duration","easing","from","to","loop","scales","grid","color","borderWidth","layout","padding","data","datasets","map","label","i","backgroundColor","colorsChart","borderColor","plugins","id","beforeDraw","chart","ctx","canvas","getContext","save","globalCompositeOperation","fillStyle","fillRect","width","height","restore"],"sourceRoot":""}