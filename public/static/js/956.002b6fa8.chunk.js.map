{"version":3,"file":"static/js/956.002b6fa8.chunk.js","mappings":"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","sources":["Pages/MainPages/DataTableComponent.js","helpers/parseInfo.js","Pages/MainPages/Facturas.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes,  order, orderBy, onRequestSort, headCells } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n\r\n    return (\r\n        <TableHead >\r\n            <TableRow>\r\n                {/* <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell> */}\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={'center'}\r\n                        padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                            className='text-dark'\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { numSelected, title } = props;\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {numSelected} selected\r\n                </Typography>\r\n            ) : (\r\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    {title}\r\n                </Typography>\r\n            )}\r\n\r\n            {numSelected > 0 && (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton aria-label=\"delete\">\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            )}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 'auto',\r\n        height: 'auto'\r\n    },\r\n    paper: {\r\n        width: 'auto',\r\n        height: 'auto',\r\n        marginBottom: theme.spacing(2),\r\n        backgroundColor: \"gray\",\r\n        color: \"black\"\r\n    },\r\n    table: {\r\n        minWidth: 500,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'relative',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport const DataTableComponent = (props) => {\r\n    const classes = useStyles();\r\n    const { onSelectRow } = props;\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense] = React.useState(true);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const { title, columns: headCells, rows } = props;\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = rows.map((n) => n.id);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    /*  const handleChangeDense = (event) => {\r\n         setDense(event.target.checked);\r\n     };\r\n  */\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={`${classes.paper} h-100vh`}>\r\n                <EnhancedTableToolbar numSelected={selected.length} title={title} />\r\n                <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={dense ? 'small' : 'medium'}\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={rows.length}\r\n                            headCells={headCells}\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(rows, getComparator(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row, index) => {\r\n                                    const isItemSelected = isSelected(row.id);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            hover\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={row.id}\r\n                                            selected={isItemSelected}\r\n                                            className=\"text-white\"\r\n                                        >\r\n                                            {/* <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    checked={isItemSelected}\r\n                                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                                    onClick={(event) => handleClick(event, row.id)}\r\n                                                />\r\n                                            </TableCell> */}\r\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" >\r\n                                                {row.fecha}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{row.totalSinImpuesto}</TableCell>\r\n                                            <TableCell align=\"right\">{row.total}</TableCell>\r\n                                            <TableCell align=\"right\">{row.productos}</TableCell>\r\n                                            <TableCell align=\"right\">{row.sucursal.num}</TableCell>\r\n                                            <TableCell align=\"center\">{row.establecimiento.razonSocial}</TableCell>\r\n                                            <TableCell style={{ cursor: 'pointer' }} onClick={() => { onSelectRow(row) }}>Ver...</TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                                    <TableCell colSpan={6} />\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import moment from 'moment'\r\n\r\nexport const parseFactura = (facturas) => {\r\n    let facturasParse = [];\r\n    facturasParse = facturas.map((factura, index) => {\r\n        return {\r\n            idMongo: factura?.id,\r\n            id: index,\r\n            fecha: moment(factura?.fechaEmision).format('DD-MM-YYYY'),\r\n            totalSinImpuesto: factura?.totalSinImpuesto,\r\n            total: factura?.importeTotal,\r\n            productos: factura?.detalles?.length,\r\n            sucursal: { num: factura?.sucursal?.numEstab, id: factura?.sucursal?._id },\r\n            establecimiento: { razonSocial: factura?.establecimiento?.razonSocial, id: factura?.establecimiento?._id },\r\n            detalles: factura?.detalles\r\n        }\r\n    })\r\n\r\n    return facturasParse;\r\n\r\n\r\n}\r\n\r\nexport const obtenerProductosFactura = (facturas) => {\r\n    const prods = [];\r\n    facturas.forEach(factura => {\r\n        factura.detalles?.forEach(prod => {\r\n            if (!prods.some(prod1 => prod?.codigoPrincipal === prod1?.value || prod?.descripcion === prod1?.label)) {\r\n                prods.push({ label: prod?.descripcion, value: prod?.codigoPrincipal })\r\n            }\r\n        });\r\n    });\r\n\r\n    return prods.sort((a, b) => a.label > b.label);\r\n}\r\n","import React, { useEffect, useState, useCallback } from 'react'\r\n\r\nimport { DataTableComponent } from './DataTableComponent';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { mostrarMensaje } from '../../helpers/popUp';\r\nimport { axiosContoken } from '../../helpers/axiosAPI';\r\nimport { InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport { openModalFactura } from '../../actions/facturas';\r\nimport { obtenerProductosFactura, parseFactura } from '../../helpers/parseInfo';\r\n\r\nconst columns = [\r\n    { id: 'fecha', numeric: false, label: 'FECHA', disablePadding: true, },\r\n    { id: 'totalSinImpuesto', numeric: true, label: 'TOTAL SIN IMPUESTO', disablePadding: true, },\r\n    { id: 'total', numeric: true, label: 'TOTAL', disablePadding: true, },\r\n    { id: 'productos', numeric: true, label: '# PRODUCTOS', disablePadding: true, },\r\n    { id: 'sucursal', numeric: true, label: 'SUCURSAL', disablePadding: true, },\r\n    { id: 'establecimiento', numeric: false, label: 'ESTABLECIMIENTO', disablePadding: true, },\r\n];\r\n\r\n\r\nconst Facturas = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { facturas } = useSelector(state => state.factura)\r\n\r\n    const [rows, setRows] = useState([]);\r\n    const [rowsVisibles, setRowsVisibles] = useState([]);\r\n    const [establecimientos, setEstablecimientos] = useState([]);\r\n    const [estab, setEstab] = useState('all');\r\n    const [sucursal, setSucursal] = useState('all');\r\n    const [sucursales, setSucursales] = useState([]);\r\n    const [sucursalesVisibles, setSucursalesVisibles] = useState([]);\r\n    const [productos, setProductos] = useState([]);\r\n    const [producto, setProducto] = useState('all');\r\n    const [productosVisibles, setProductosVisibles] = useState([]);\r\n\r\n\r\n\r\n    const handleChangeEstab = (value) => {\r\n\r\n        setEstab(value);\r\n        if (value === 'all') {\r\n            setSucursalesVisibles([...sucursales])\r\n            return setRowsVisibles([...rows]);\r\n        }\r\n        setRowsVisibles(rows.filter((fact) => fact.establecimiento.id === value));\r\n        setSucursalesVisibles(sucursales.filter((suc) => suc?.establecimiento?._id === value));\r\n        setSucursal('all');\r\n    }\r\n\r\n    const handleChangeSucursal = (value) => {\r\n\r\n        setSucursal(value);\r\n\r\n        if (value === 'all' && estab === 'all' && producto === 'all') {\r\n            return setRowsVisibles([...rows]);\r\n        }\r\n\r\n        const arrSucursales = rows.filter((fact) => {\r\n            if (value === 'all') {\r\n                return fact.establecimiento.id === estab\r\n            }\r\n            return fact.sucursal.id === value\r\n        });\r\n        debugger;\r\n        (arrSucursales.length > 0) && (setEstab(arrSucursales[0].establecimiento.id));\r\n        setRowsVisibles([...arrSucursales]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (estab !== 'all' || sucursal !== 'all') {\r\n            setProductosVisibles(obtenerProductosFactura(rowsVisibles));\r\n        } else {\r\n            setProductosVisibles(productos);\r\n        }\r\n        \r\n    }, [estab, sucursal, rowsVisibles, productos])\r\n\r\n    //Obtiene establecimientos y sucursales\r\n    const getData = useCallback(async () => {\r\n        try {\r\n            const p1 = axiosContoken('facturas/estab');\r\n            const p2 = axiosContoken('facturas/sucursales');\r\n            const [estabs, sucursals] = await Promise.all([p1, p2])\r\n            if (!estabs.data.ok) {\r\n                return mostrarMensaje('login', estabs.msg, 'error');\r\n            }\r\n            setEstablecimientos(estabs.data.content.establecimientos)\r\n            if (!sucursals.data.ok) {\r\n                return mostrarMensaje('login', sucursals.msg, 'error');\r\n            }\r\n            setSucursales(sucursals.data.content.sucursales);\r\n            setSucursalesVisibles(sucursals.data.content.sucursales);\r\n        } catch (error) {\r\n            mostrarMensaje('login', error, 'error');\r\n        }\r\n    }, []);\r\n    useEffect(() => {\r\n        getData();\r\n    }, [getData, facturas])\r\n\r\n\r\n    useEffect(() => {\r\n        setRowsVisibles(parseFactura(facturas));\r\n        setRows(parseFactura(facturas));\r\n        setProductos(obtenerProductosFactura(facturas));\r\n        setProductosVisibles(obtenerProductosFactura(facturas));\r\n    }, [facturas]);\r\n\r\n    const onSelectRow = (row) => {\r\n        const facturaSeleccionada = facturas.find(fact => row.idMongo === fact.id);\r\n        console.log(facturaSeleccionada);\r\n        dispatch(openModalFactura(facturaSeleccionada));\r\n    }\r\n\r\n    const handleChangeProductos = (value) => {\r\n        setProducto(value);\r\n        if (sucursal === 'all') {\r\n            if (estab === 'all') {\r\n                if ('all' === value) {\r\n                    setRowsVisibles([...rows])\r\n                } else {\r\n                    const arrFacturas = rows.filter((fact) => fact?.detalles?.filter(det => det?.descripcion === value)?.length > 0);\r\n                    setRowsVisibles([...arrFacturas]);\r\n                }\r\n            } else {\r\n                handleChangeEstab(estab)\r\n            }\r\n        } else {\r\n            handleChangeSucursal(sucursal);\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <div className=\"container text-white mt-5\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 animate__animated animate__bounce animate__fadeInUp animate__fast\">\r\n                    <h2>Filtros</h2>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                    <div className=\"row p-3 animate__animated animate__bounce animate__fadeInUp animate__fast\">\r\n                        <InputLabel id=\"demo-simple-select-label\">Establecimientos</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={estab}\r\n                            onChange={(e) => handleChangeEstab(e.target.value)}\r\n                        >\r\n                            <MenuItem value={'all'}>Todos</MenuItem>\r\n                            {establecimientos.map((estab, index) => {\r\n                                return <MenuItem key={index} value={estab.id}>{estab.razonSocial}</MenuItem>\r\n                            })}\r\n                        </Select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-3 animate__animated animate__bounce animate__fadeInUp animate__fast\">\r\n                    <div className=\"row p-3\">\r\n                        <InputLabel id=\"demo-simple-select-label\">Sucursales</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={sucursal}\r\n                            onChange={(e) => handleChangeSucursal(e.target.value)}\r\n\r\n                        >\r\n                            <MenuItem value={'all'}>Todos</MenuItem>\r\n                            {sucursalesVisibles.map((sucur, index) => {\r\n                                return <MenuItem key={index} value={sucur.id}>{sucur.numEstab}| {sucur.direccion}</MenuItem>\r\n                            })}\r\n                        </Select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-3 animate__animated animate__bounce animate__fadeInUp animate__fast\">\r\n                    <div className=\"row p-3\">\r\n                        <InputLabel id=\"demo-simple-select-label\">Productos</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={producto}\r\n                            onChange={(e) => handleChangeProductos(e.target.value)}\r\n                        >\r\n                            <MenuItem value={'all'}>Todos</MenuItem>\r\n                            {productosVisibles?.map((prod, index) => {\r\n                                return <MenuItem key={index + 'prods'} value={prod.label} title={prod.label}>{prod.label.slice(0,30)}</MenuItem>\r\n                            })}\r\n                        </Select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 mt-3 animate__animated animate__bounce animate__fadeInUp animate__fast\" >\r\n                    <DataTableComponent title={'Facturas'} columns={columns} rows={rowsVisibles} onSelectRow={onSelectRow} />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Facturas;\r\n"],"names":["descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","EnhancedTableHead","props","classes","onRequestSort","headCells","TableHead","TableRow","headCell","TableCell","align","padding","disablePadding","sortDirection","id","TableSortLabel","active","direction","onClick","property","event","className","label","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","numSelected","Toolbar","clsx","Typography","variant","component","Tooltip","IconButton","Delete","useStyles","width","height","paper","marginBottom","table","minWidth","border","clip","margin","overflow","position","top","DataTableComponent","onSelectRow","React","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","columns","rows","emptyRows","Math","min","length","Paper","TableContainer","Table","size","onSelectAllClick","target","checked","newSelecteds","n","rowCount","TableBody","slice","row","name","isItemSelected","indexOf","labelId","hover","role","tabIndex","scope","fecha","totalSinImpuesto","total","productos","sucursal","num","establecimiento","razonSocial","style","cursor","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","value","parseFactura","facturas","factura","idMongo","moment","fechaEmision","format","importeTotal","detalles","numEstab","_id","obtenerProductosFactura","prods","forEach","prod","some","prod1","codigoPrincipal","descripcion","push","numeric","dispatch","useDispatch","useSelector","state","useState","setRows","rowsVisibles","setRowsVisibles","establecimientos","setEstablecimientos","estab","setEstab","setSucursal","sucursales","setSucursales","sucursalesVisibles","setSucursalesVisibles","setProductos","producto","setProducto","productosVisibles","setProductosVisibles","handleChangeEstab","filter","fact","suc","handleChangeSucursal","arrSucursales","useEffect","getData","useCallback","p1","axiosContoken","p2","Promise","all","estabs","sucursals","data","ok","mostrarMensaje","msg","content","InputLabel","Select","onChange","e","MenuItem","sucur","direccion","arrFacturas","det","handleChangeProductos","facturaSeleccionada","find","console","log","openModalFactura"],"sourceRoot":""}